server:
  port: 80  #服务端口
  servlet:
    context-path: /ddemo
  tomcat:
    uri-encoding: UTF-8
spring:
  application:
    name: ddemo  #服务名
  jackson:
    #过滤接口返回为null的字段
    default-property-inclusion: non_null

  http:
    encoding:
      #设置项目编码为utf-8
      charset: UTF-8
      force: true
      enabled: true
  messages:
    encoding: UTF-8

#数据库配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/test02?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
    username: root
    password: Alex2017!
  # 配置初始化大小、最小、最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
  # 配置获取连接等待超时的时间
    maxWait: 60000
  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
  # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: SELECT 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
   # 打开PSCache，并且指定每个连接上PSCache的大小。如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。
    poolPreparedStatements: false
    maxPoolPreparedStatementPerConnectionSize: 20
  # 配置监控统计拦截的filters
    filters: stat
#jpa配置
  #jpa:
   # database: mysql
   # show-sql: true
   # generate-ddl: true
   # hibernate:
   #   ddl-auto: update
#mongo配置
  data:
    mongodb:
      database: jiepai
      uri: mongodb://127.0.0.1:27017
 #redis
# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
  redis:
      database: 0
      timeout: 200
# Redis服务器地址
      host: 127.0.0.1
# Redis服务器连接端口
      port: 6379
# Redis服务器连接密码（默认为空）
      password: Alex2017!
# 连接池最大连接数（使用负值表示没有限制）
      pool:
        max-active: 8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
# 连接池中的最大空闲连接
        max-idle: 8
# 连接池中的最小空闲连接
        min-idle: 0
      #cluster:
      #  max-redirects: 10
       # nodes: 127.0.0.1:6080
# 连接超时时间（毫秒）

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    publisher-confirms: true   #消息发送到交换机确认机制，是否确认回调
    virtual-host: /
    publisher-returns: true   #消息发送到交换机确认机制，是否返回回调
    listener:
      simple:
        acknowledge-mode: manual   #采用手动应答
        concurrency: 1   #最小消费者数量
        max-concurrency: 10   #最大消费者数量
        retry:
          enabled: true  #是否支持重试
management:
  health:
    rabbit:
      enabled: false
#quartz
  quartz:
      #相关属性配置
      properties:
        org:
          quartz:
            scheduler:
              instanceName: clusteredScheduler
              instanceId: AUTO
            jobStore:
              class: org.quartz.impl.jdbcjobstore.JobStoreTX
              driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
              tablePrefix: QRTZ_
              isClustered: true
              clusterCheckinInterval: 10000
              useProperties: false
            threadPool:
              class: org.quartz.simpl.SimpleThreadPool
              threadCount: 10
              threadPriority: 5
              threadsInheritContextClassLoaderOfInitializingThread: true
            dataSource:
              default:
                URL: mysql://localhost:3306/test02?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
                user: root
                password: Alex2017!
                driver: com.mysql.cj.jdbc.Driver
      #数据库方式
      job-store-type: jdbc
      #初始化表结构
      #jdbc:
        #initialize-schema: never
#静态资源访问，默认值为 /**
#spring:
#  mvc:
#    static-path-pattern:
#        #默认值为 classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/
#  resources:
#    static-locations: 这里设置要指向的路径，多个使用英文逗号隔开

# 设置编码格式
banner:
  charset: UTF-8
#netty
netty:
  port: 8888
#分页插件
pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql

#sql logs
mybatis:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
logging:
  level:
     com.mgp.ddemo.*.mapper : debug

